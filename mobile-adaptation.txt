移动端是怎么做适配的？

1.在head中添加meta标签
  ```
  <meta name="viewport" content="width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0">
  ```
  
  作用：防止手机页面模拟980px；让页面宽度等于设备宽度；防止页面在用户双击的时候放大；防止用户两指缩放页面；
  viewport：视口
  device-width：设备宽度
  initial-scale：初始缩放
  user-scalable：用户缩放
  minimum-scale：最小缩放
  maximum-scale：最大缩放

2.媒体查询（media query）
  定义：对当前媒体设备进行某些条件查询叫媒体查询
  ① 在style标签中直接使用@media
  ```
  @media(max-width: 768px){
  	body{background: red;}
  }
  @media(max-width: 425px){
  	body{background: yellow;}
  }
  @media(max-width: 320px){
  	body{background: green;}
  }
  ```
  这样尺寸范围会有交集，后面效果会覆盖前面
  所以最好使用and连接两个大小范围，让彼此无交集无交集
  ```
  @media(max-width: 320px){
  	body{background:red;}
  }
  @media(min-width: 321px) and (max-width:425px){
  	body{background:green;}
  }
  ```

  ② 媒体查询结果指向一个文件
  ```
  <link rel="stylesheet" href="style.css" media="(max-width: 320px)">
  ```
  只有当媒体宽度小于 320px 的时候，style.css才会生效


3.动态 rem 方案
  手机专用的自适应方案，pad，pc不适用。rem（root em），根元素（html）的font-size,rem的核心是缩放，把所有元素放大缩小，解决了百分比布局宽高没有关联的缺陷。

  手机端方案的特点：
  ① 所有手机显示的界面都是一样的，只是大小不同
  ② 1 rem == html font-size == viewport width

  一切以宽度为基准，通过js动态设置不同设备的rem

  使用 JS 动态调整 REM
  ```
  <meta name="viewport" content="width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0">
   <script>
       var pageWidth = window.innerWidth
       document.write('<style>html{font-size:'+pageWidth+'px;}</style>')
   </script>
   ```
