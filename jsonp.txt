一、什么是JSONP？

请求方：tom.com的前端程序员（浏览器）
响应方：jack.com的后端程序员（服务器）

1.请求方创建script, src指向响应方，同时传入一个查询参数?callbackName=yyy
  yyy是一段要执行的代码函数。  
2.响应方根据查询参数callbackName,构造形如
      yyy.call(undefined, '你要的数据')  或
      yyy('你要的数据')    这样的响应。
3.浏览器接收到响应，就会执行yyy.call(undefined,'你要的数据')
4.那么请求方就知道了他要的数据

这就是JSONP

约定：
1.callbackName  ->  callback
2.yyy    ->    随机数 frank8372482()



二、JSONP 为什么不支持 POST？
1.因为JSONP是通过动态创建script实现的
2.动态创建script只能用get请求，没办法用POST



三、用代码实现 frank.com:8001 和 jack.com:8002 之间的 JSONP 请求
//前端代码方案一
button.addEventListener('click', (e)=>{
    let script = document.createElement('script')
    let functionName = 'frank'+ parseInt(Math.random()*10000000 ,10)
    window[functionName] = function(){  // 每次请求之前搞出一个随机的函数
        amount.innerText = amount.innerText - 0 - 1
    }
    script.src = '/pay?callback=' + functionName
    document.body.appendChild(script)
    script.onload = function(e){ // 状态码是 200~299 则表示成功
        e.currentTarget.remove()
        delete window[functionName] // 请求完了就干掉这个随机函数
    }
    script.onload = function(e){ // 状态码大于等于 400 则表示失败
        e.currentTarget.remove()
        delete window[functionName] // 请求完了就干掉这个随机函数
    }
})


//前端代码 jquery版
 $.ajax({
	 url: "http://jack.com:8002/pay",
	 dataType: "jsonp",
	 success: function( response ) {
	     if(response === 'success'){
	     amount.innerText = amount.innerText - 1
	     }
	 }
 })
 

//后端代码
...
if (path === '/pay'){
    let amount = fs.readFileSync('./db', 'utf8')
    amount -= 1
    fs.writeFileSync('./db', amount)
    let callbackName = query.callback
    response.setHeader('Content-Type', 'application/javascript')
    response.write(`
        ${callbackName}.call(undefined, 'success')
    `)
    response.end()
}
...


